{"version":3,"sources":["fonts/Tw-Cen-MT.ttf","fonts/GoudyBookletter1911.ttf","queries/checkout.js","contexts/CartContext.js","images/mildew.png","components/Header.js","components/Content.js","components/InputField.js","components/Mailchimp.js","components/About.js","helpers/formatters.js","components/Shop/ScrollImage.js","components/Shop/Product.js","components/Shop/CustomerAuth.js","components/Shop/Shop.js","components/Home.js","components/Shop/LineItem.js","components/Shop/Cart.js","images/nav1white.png","images/nav1color.png","images/nav2white.png","images/nav2color.png","images/nav3white.png","images/nav3color.png","images/nav4white.png","images/nav4color.png","components/Navigation.js","App.js","index.js"],"names":["CheckoutFragment","gql","createCheckout","checkoutLineItemsAdd","checkoutLineItemsUpdate","checkoutLineItemsRemove","checkoutCustomerAssociate","useCheckoutEffect","data","key","setDataCallback","useEffect","checkout","fetchCheckout","query","CartContext","createContext","CartProvider","children","useState","isCartOpen","setCartOpen","isNewCustomer","isCustomerAuthOpen","setCustomerAuthOpen","setAccountVerificationMessage","lineItems","edges","setCheckout","customerAccessToken","useMutation","createCheckoutMutation","createCheckoutData","loading","error","lineItemAddMutation","lineItemAddData","lineItemUpdateMutation","lineItemUpdateData","lineItemRemoveMutation","lineItemRemoveData","customerAssociateMutation","customerAssociateData","useQuery","shopLoading","shopError","shopData","variables","input","then","res","console","log","err","Provider","value","removeLineItemInCart","lineItemId","checkoutId","id","lineItemIds","updateLineItemInCart","quantity","parseInt","closeCustomerAuth","associateCustomerCheckout","accountVerificationMessage","setTimeout","addVariantToCart","variantId","localStorage","setItem","handleCartClose","Logo","styled","img","Header","src","logo","BlurbDiv","div","Blurb","h4","P","p","A","a","Span","span","MobileLink","Link","Input","Submit","InputField","props","values","type","className","label","disabled","formValues","some","f","indexOf","onChange","e","onChangeHandler","target","placeholder","required","isRequired","rows","name","FormDiv","form","CustomForm","status","onValidated","message","email","setEmail","clearFields","onSubmit","preventDefault","EMAIL","handleSubmit","MailchimpFormContainer","url","render","subscribe","formData","About","marginTop20","marginTop","style","marginBottom","Mailchimp","rel","href","to","formatPrice","amount","Intl","NumberFormat","currency","format","ScrollImage","product","variantImage","secondaryImages","scrollRef","useRef","isScrollRef","setMove","state","current","moveDown","scrollTop","requestAnimationFrame","moveUp","ref","images","length","alt","title","map","image","node","onMouseDown","onMouseUp","onTouchStart","onTouchEnd","Product","defaultOptionValues","options","forEach","selector","shift","variants","variant","variantQuantity","price","onClick","dangerouslySetInnerHTML","__html","descriptionHtml","customerCreate","customerAccessTokenCreate","CustomerAuthWithMutation","compose","graphql","password","setPassword","nonFieldErrorMessage","setNonFieldErrorMessage","emailErrorMessage","setEmailErrorMessage","passwordErrorMessage","setPasswordErrorMessage","resetErrorMessages","createCustomerAccount","customer","showAccountVerificationMessage","userErrors","field","loginCustomerAccount","accessToken","newCustomer","event","Shop","useContext","fetchExistingCheckout","client","existingCheckoutID","getItem","setCheckoutInState","completedAt","initializeCheckout","collections","products","toString","Home","paddingBottom","LineItemm","line_item","updatedQuantity","decrementQuantity","incrementQuantity","parseFloat","priceV2","toFixed","Cart","subtotal","setSubtotal","subtotalPriceV2","line_items","LineItem","window","open","webUrl","NavBlob","topLeft","css","nav1white","nav1color","topRight","nav2white","nav2color","bottomLeft","nav3white","nav3color","bottomRight","nav4white","nav4color","NavLink","bR","CartButton","Hidden","HiddenImg","Container","Navigation","cartQty","pathname","exact","path","component","App","httpLink","createHttpLink","uri","middlewareLink","setContext","headers","ApolloClient","link","concat","cache","InMemoryCache","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.be9af771.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Tw-Cen-MT.7b67eec0.ttf\";","export default __webpack_public_path__ + \"static/media/GoudyBookletter1911.83d3165a.ttf\";","import gql from \"graphql-tag\";\nimport { useEffect } from \"react\";\n\nconst CheckoutFragment = gql`\n  fragment CheckoutFragment on Checkout {\n    id\n    webUrl\n    totalTaxV2 {\n      amount\n      currencyCode\n    }\n    subtotalPriceV2 {\n      amount\n      currencyCode\n    }\n    totalPriceV2 {\n      amount\n      currencyCode\n    }\n    lineItems(first: 250) {\n      edges {\n        node {\n          id\n          title\n          variant {\n            id\n            title\n            image {\n              src\n            }\n            priceV2 {\n              amount\n              currencyCode\n            }\n          }\n          quantity\n        }\n      }\n    }\n  }\n`;\n\nexport const createCheckout = gql`\n  mutation checkoutCreate($input: CheckoutCreateInput!) {\n    checkoutCreate(input: $input) {\n      userErrors {\n        message\n        field\n      }\n      checkout {\n        ...CheckoutFragment\n      }\n    }\n  }\n  ${CheckoutFragment}\n`;\n\nexport const checkoutLineItemsAdd = gql`\n  mutation checkoutLineItemsAdd(\n    $checkoutId: ID!\n    $lineItems: [CheckoutLineItemInput!]!\n  ) {\n    checkoutLineItemsAdd(checkoutId: $checkoutId, lineItems: $lineItems) {\n      userErrors {\n        message\n        field\n      }\n      checkout {\n        ...CheckoutFragment\n      }\n    }\n  }\n  ${CheckoutFragment}\n`;\n\nexport const checkoutLineItemsUpdate = gql`\n  mutation checkoutLineItemsUpdate(\n    $checkoutId: ID!\n    $lineItems: [CheckoutLineItemUpdateInput!]!\n  ) {\n    checkoutLineItemsUpdate(checkoutId: $checkoutId, lineItems: $lineItems) {\n      userErrors {\n        message\n        field\n      }\n      checkout {\n        ...CheckoutFragment\n      }\n    }\n  }\n  ${CheckoutFragment}\n`;\n\nexport const checkoutLineItemsRemove = gql`\n  mutation checkoutLineItemsRemove($checkoutId: ID!, $lineItemIds: [ID!]!) {\n    checkoutLineItemsRemove(\n      checkoutId: $checkoutId\n      lineItemIds: $lineItemIds\n    ) {\n      userErrors {\n        message\n        field\n      }\n      checkout {\n        ...CheckoutFragment\n      }\n    }\n  }\n  ${CheckoutFragment}\n`;\n\nexport const checkoutCustomerAssociate = gql`\n  mutation checkoutCustomerAssociate(\n    $checkoutId: ID!\n    $customerAccessToken: String!\n  ) {\n    checkoutCustomerAssociate(\n      checkoutId: $checkoutId\n      customerAccessToken: $customerAccessToken\n    ) {\n      userErrors {\n        field\n        message\n      }\n      checkout {\n        ...CheckoutFragment\n      }\n    }\n  }\n  ${CheckoutFragment}\n`;\n\nexport function useCheckoutEffect(data, key, setDataCallback) {\n  useEffect(() => {\n    if (data && data[key] && data[key].checkout) {\n      setDataCallback(data[key].checkout);\n    }\n  }, [data]);\n}\n\nexport const fetchCheckout = gql`\n  query ($id: ID!) {\n    node(id: $id) {\n      ...CheckoutFragment\n    }\n  }\n  ${CheckoutFragment}\n`;\n","import React, { useState, useEffect, createContext } from \"react\";\nimport { useQuery, useMutation } from \"@apollo/react-hooks\";\nimport gql from \"graphql-tag\";\nimport {\n  useCheckoutEffect,\n  createCheckout,\n  checkoutLineItemsAdd,\n  checkoutLineItemsUpdate,\n  checkoutLineItemsRemove,\n  checkoutCustomerAssociate,\n} from \"../queries/checkout\";\n\nconst query = gql`\n  query query {\n    collections(first: 10) {\n      edges {\n        node {\n          id\n          title\n          description\n          handle\n          products(first: 250) {\n            pageInfo {\n              hasNextPage\n              hasPreviousPage\n            }\n            edges {\n              node {\n                id\n                title\n                descriptionHtml\n                options {\n                  id\n                  name\n                  values\n                }\n                variants(first: 250) {\n                  pageInfo {\n                    hasNextPage\n                    hasPreviousPage\n                  }\n                  edges {\n                    node {\n                      id\n                      title\n\n                      selectedOptions {\n                        name\n                        value\n                      }\n                      image {\n                        src\n                      }\n                      price {\n                        amount\n                        currencyCode\n                      }\n                      compareAtPrice {\n                        amount\n                        currencyCode\n                      }\n                      availableForSale\n                    }\n                  }\n                }\n                images(first: 250) {\n                  pageInfo {\n                    hasNextPage\n                    hasPreviousPage\n                  }\n                  edges {\n                    node {\n                      src\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport const CartContext = createContext();\n\nexport const CartProvider = ({ children }) => {\n  const [isCartOpen, setCartOpen] = useState(false);\n\n  const [isNewCustomer, setNewCustomer] = useState(false);\n  const [isCustomerAuthOpen, setCustomerAuthOpen] = useState(false);\n  const [showAccountVerificationMessage, setAccountVerificationMessage] =\n    useState(false);\n  const [checkout, setCheckout] = useState({ lineItems: { edges: [] } });\n\n  const [customerAccessToken, setCustomerAccessToken] = useState(null);\n\n  const [\n    createCheckoutMutation,\n    {\n      data: createCheckoutData,\n      loading: createCheckoutLoading,\n      error: createCheckoutError,\n    },\n  ] = useMutation(createCheckout);\n\n  const [\n    lineItemAddMutation,\n    {\n      data: lineItemAddData,\n      loading: lineItemAddLoading,\n      error: lineItemAddError,\n    },\n  ] = useMutation(checkoutLineItemsAdd);\n\n  // const lineItemUpdateData =\n\n  const [\n    lineItemUpdateMutation,\n    {\n      data: lineItemUpdateData,\n      loading: lineItemUpdateLoading,\n      error: lineItemUpdateError,\n    },\n  ] = useMutation(checkoutLineItemsUpdate);\n\n  const [\n    lineItemRemoveMutation,\n    {\n      data: lineItemRemoveData,\n      loading: lineItemRemoveLoading,\n      error: lineItemRemoveError,\n    },\n  ] = useMutation(checkoutLineItemsRemove);\n\n  const [\n    customerAssociateMutation,\n    {\n      data: customerAssociateData,\n      loading: customerAssociateLoading,\n      error: customerAssociateError,\n    },\n  ] = useMutation(checkoutCustomerAssociate);\n\n  const {\n    loading: shopLoading,\n    error: shopError,\n    data: shopData,\n  } = useQuery(query);\n\n  useEffect(() => {\n    const variables = { input: {} };\n    createCheckoutMutation({ variables }).then(\n      (res) => {\n        console.log(res);\n      },\n      (err) => {\n        console.log(\"create checkout error\", err);\n      }\n    );\n  }, []);\n\n  useCheckoutEffect(createCheckoutData, \"checkoutCreate\", setCheckout);\n  useCheckoutEffect(lineItemAddData, \"checkoutLineItemsAdd\", setCheckout);\n  useCheckoutEffect(lineItemUpdateData, \"checkoutLineItemsUpdate\", setCheckout);\n  useCheckoutEffect(lineItemRemoveData, \"checkoutLineItemsRemove\", setCheckout);\n  useCheckoutEffect(\n    customerAssociateData,\n    \"checkoutCustomerAssociate\",\n    setCheckout\n  );\n\n  const handleCartClose = () => {\n    setCartOpen(false);\n  };\n\n  const openCustomerAuth = (event) => {\n    if (event.target.getAttribute(\"data-customer-type\") === \"new-customer\") {\n      setNewCustomer(true);\n      setCustomerAuthOpen(true);\n    } else {\n      setNewCustomer(false);\n      setCustomerAuthOpen(true);\n    }\n  };\n\n  const accountVerificationMessage = () => {\n    setAccountVerificationMessage(true);\n    setTimeout(() => {\n      setAccountVerificationMessage(false);\n    }, 5000);\n  };\n\n  const closeCustomerAuth = () => {\n    setCustomerAuthOpen(false);\n  };\n\n  const addVariantToCart = (variantId, quantity) => {\n    const variables = {\n      checkoutId: checkout.id,\n      lineItems: [{ variantId, quantity: parseInt(quantity, 10) }],\n    };\n    localStorage.setItem(\"shopify_checkout_id\", variables.checkoutId);\n    // TODO replace for each mutation in the checkout thingy. can we export them from there???\n    // create your own custom hook???\n\n    lineItemAddMutation({ variables }).then((res) => {\n      setCartOpen(true);\n    });\n  };\n\n  const updateLineItemInCart = (lineItemId, quantity) => {\n    const variables = {\n      checkoutId: checkout.id,\n      lineItems: [{ id: lineItemId, quantity: parseInt(quantity, 10) }],\n    };\n    lineItemUpdateMutation({ variables });\n  };\n\n  const removeLineItemInCart = (lineItemId) => {\n    const variables = { checkoutId: checkout.id, lineItemIds: [lineItemId] };\n    lineItemRemoveMutation({ variables });\n  };\n\n  const associateCustomerCheckout = (customerAccessToken) => {\n    const variables = {\n      checkoutId: checkout.id,\n      customerAccessToken: customerAccessToken,\n    };\n    customerAssociateMutation({ variables }).then((res) => {\n      setCustomerAuthOpen(false);\n    });\n  };\n\n  return (\n    <CartContext.Provider\n      value={{\n        isCartOpen,\n        setCartOpen,\n        removeLineItemInCart,\n        lineItemRemoveData,\n        checkout,\n        setCheckout,\n        updateLineItemInCart,\n        lineItemUpdateMutation,\n        lineItemUpdateData,\n        createCheckoutMutation,\n        createCheckoutData,\n        shopLoading,\n        shopError,\n        closeCustomerAuth,\n        isCustomerAuthOpen,\n        isNewCustomer,\n        associateCustomerCheckout,\n        accountVerificationMessage,\n        shopData,\n        addVariantToCart,\n        handleCartClose,\n        customerAccessToken,\n        query,\n      }}\n    >\n      {children}\n    </CartContext.Provider>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/mildew.a49efbbf.png\";","import styled from \"styled-components\";\nimport logo from \"../images/mildew.png\";\n\nconst Logo = styled.img`\n  margin: 150px 30% 10px;\n  width: 40%;\n\n  @media only screen and (max-width: 900px) {\n    margin: 130px 25% 10px;\n    width: 50%;\n  }\n\n  @media only screen and (max-width: 680px) {\n    margin: 40px 15% 0;\n    width: 70%;\n  }\n\n  @media only screen and (max-width: 420px) {\n    margin: 40px 10% 0;\n    width: 80%;\n  }\n`;\n\nconst Header = () => {\n  return (\n    <div>\n      <Logo src={logo} />\n    </div>\n  );\n};\n\nexport default Header;\n","import { Link } from 'react-router-dom'\nimport styled from 'styled-components'\n\nconst BlurbDiv = styled.div`\n  margin: 0 auto;\n  width: fit-content;\n`\n\nconst Blurb = styled.h4`\n  margin: 20px;\n  font-size: 48px;\n\n  @media only screen and (max-width: 1100px) {\n    font-size: 38px;\n  }\n\n  @media only screen and (max-width: 680px) {\n    font-size: 26px;\n  }\n\n  @media only screen and (max-width: 400px) {\n    font-size: 20px;\n  }\n`\n\nconst P = styled.p`\n  margin: 0px auto;\n  width: fit-content;\n  max-width: 60%;\n  font-size: 22px;\n\n  @media only screen and (max-width: 700px) {\n    max-width: 70%;\n    text-align: center;\n  }\n\n  @media only screen and (max-width: 400px) {\n    font-size: 16px;\n  }\n`\n\nconst A = styled.a`\n  color: #E0ECC6;\n  text-decoration: none;\n\n  &:hover {\n    text-decoration: underline;\n  }\n`\n\nconst Span = styled.span`\n    @media (min-width: 800px){\n        display: none;\n    }\n`\n\nconst MobileLink = styled(Link)`\n    color: #D7B7E1;\n    text-decoration: none;\n\n    &:hover {\n    text-decoration: underline;\n    }\n`\n\nexport {A, Blurb, BlurbDiv, P, Span, MobileLink}","import React from 'react';\nimport styled from 'styled-components';\n\nconst Input = styled.input`\n    cursor: text;\n    border: none;\n    background: #E0ECC6;\n    min-height: 40px;\n    width: 300px;\n    display: flex;\n    flex-direction: column;\n    padding-left: 10px;\n    justify-content: space-evenly;\n    -webkit-appearance: none;\n    -webkit-border-radius: 0;\n    &:focus-visible{\n        outline: none;\n    }\n    &:focus{\n        outline: none;\n    }\n    @media (max-width: 900px){\n        width: 200px;\n    }\n`\n\nconst Submit = styled.input`\n\n    cursor: pointer;\n    background: #6EB0CC;\n    min-height: 40px;\n    width: fit-content;\n    padding: 10px 15px;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-evenly;\n    color: black;\n    border: none;\n    -webkit-appearance: none;\n    -webkit-border-radius: 0;\n    &:hover{\n        background: #319686\n    }\n`\n\n\nconst InputField = props => {\n\n    //Checks if all the fields are filled and if an @ sign is used in the email field\n    const validateInput = values => {\n\n        if (values.some(f => f === \"\") || values[0].indexOf(\"@\") === -1) {\n            return true\n        } else {\n            return false\n        }\n    }\n\n    <div></div>\n    if (props.type === \"submit\") {\n        return (\n\n                <Submit\n                    className='primaryBtn primaryBtn--big g__justify-self-center'\n                    type='submit'\n                    value={props.label}\n                    disabled={validateInput(props.formValues)}\n                />\n\n        )\n    } else if (props.type === \"textarea\") {\n        return (\n            <label className=\"inputField__label\">\n                {props.label}\n                <textarea\n                    onChange={(e) => props.onChangeHandler(e.target.value)}\n                    placeholder={props.placeholder}\n                    value={props.value}\n                    required={props.isRequired}\n                    className=\"inputField__field\"\n                    rows={7}\n                    name={props.name}\n                />\n            </label>\n        );\n    } else {\n        return (\n            <label className=\"inputField__label\">\n                {props.label}\n                <Input\n                    onChange={(e) => props.onChangeHandler(e.target.value)}\n                    type={props.type}\n                    placeholder={props.placeholder}\n                    value={props.value}\n                    required={props.isRequired}\n                    className=\"inputField__field\"\n                    name={props.name}\n                />\n            </label>\n        );\n    }\n\n\n};\n\nexport default InputField;","import React, { useEffect , useState } from 'react';\nimport MailchimpSubscribe from \"react-mailchimp-subscribe\";\nimport InputField from './InputField';\nimport styled from 'styled-components';\n\nconst FormDiv = styled.form`\n    margin: auto;\n    width: fit-content;\n    display: flex;\n`\n\nconst CustomForm = ({ status, message, onValidated }) => {\n\n  const [email, setEmail] = useState('');\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    email &&\n    email.indexOf(\"@\") > -1 &&\n    onValidated({\n        EMAIL: email\n    });\n  }\n\n  useEffect(() => {\n    if(status === \"success\") clearFields();\n  }, [status])\n\n  const clearFields = () => {\n    setEmail('');\n  }\n\n  return (\n      <div\n        className=\"mc__form\"\n        onSubmit={(e) => handleSubmit(e)}>\n\n        <FormDiv>\n          <div className=\"mc__field-container\">\n            \n            <InputField\n              onChangeHandler={setEmail}\n              type=\"email\"\n              value={email}\n              placeholder=\"Email address\"\n              isRequired\n            />\n\n          </div>\n\n          <InputField\n            className=\"Input-submit\"\n            label=\"See You Soon\"\n            type=\"submit\"\n            formValues={[email]}\n          />\n        </FormDiv>\n\n        {status === \"sending\" && (\n          <div className=\"mc__alert mc__alert--sending\">\n            Subscribing...\n          </div>\n        )}\n        {status === \"error\" && (\n          <div \n            className=\"mc__alert mc__alert--error\"\n          >Please try a different email!</div>\n        )}\n\n        {status === \"success\" && (\n          <div\n            className=\"mc__alert mc__alert--success\"\n          >Woo hoo!</div>\n        )}\n      </div>\n  );\n};\n\nconst MailchimpFormContainer = props => {\n  const postUrl = 'https://mildewmag.us20.list-manage.com/subscribe/post?u=037b6a8670c6cce5814bcd8ba&amp;id=8789398a33';\n\n    return (\n        <div className=\"mc__form-container\">\n          <MailchimpSubscribe\n          url={postUrl}\n          render={({ subscribe, status, message }) => (\n              <CustomForm\n                  status={status} \n                  message={message}\n                  onValidated={formData => subscribe(formData)}\n              />\n          )}\n      />\n          </div>\n    );\n};\n\nexport default MailchimpFormContainer;","import React from \"react\";\nimport { A, P, Span, MobileLink } from \"./Content\";\nimport Mailchimp from \"./Mailchimp\";\n\nconst About = () => {\n  const marginTop20 = {\n    marginTop: 20,\n  };\n\n  const marginTop40 = {\n    marginTop: 40,\n  };\n\n  const margin20 = {\n    marginTop: 20,\n    marginBottom: 20,\n  };\n\n  return (\n    <div className=\"content-container\">\n      <div>\n        <P style={marginTop40}>\n          Mildew is an annual print magazine about secondhand fashion and\n          creative reuse, featuring art and writing that inspires us to think\n          about old clothes in new ways. Mildew is a guide to dressing in the\n          spirit of our times and reveling in the decay of fashion as we knew\n          it.\n        </P>\n        <P style={marginTop20}>Not new, but original.</P>\n        <P style={marginTop20}>\n          See our Instagram for a list of stockists near you!\n        </P>\n        <P style={margin20}> Stay in the loop:</P>\n        <Mailchimp />\n        <Span>\n          <P style={marginTop20}>\n            <A\n              rel=\"noreferrer\"\n              target=\"_blank\"\n              href=\"https://www.instagram.com/mildewmag\"\n            >\n              @mildewmag\n            </A>\n          </P>\n          <P style={marginTop20}>\n            <A\n              rel=\"noreferrer\"\n              target=\"_blank\"\n              href=\"mailto:mildewmag@gmail.com\"\n            >\n              mildewmag@gmail.com\n            </A>\n          </P>\n          <P style={marginTop20}>\n            <MobileLink to=\"/about\">About Mildew</MobileLink>\n          </P>\n        </Span>\n        <Span>\n          <P style={marginTop20}>\n            <MobileLink to=\"/\">Home</MobileLink>\n          </P>\n        </Span>\n      </div>\n    </div>\n  );\n};\n\nexport { About };\n","export function formatPrice(amount) {\n  return new Intl.NumberFormat(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\",\n  }).format(amount);\n}\n","import { useRef } from \"react\";\n\nfunction ScrollImage(props) {\n  const { product, variantImage, secondaryImages } = props;\n\n  const step = 10;\n  const scrollRef = useRef();\n  const isScrollRef = useRef();\n\n  const setMove = (state) => (isScrollRef.current = state);\n\n  const moveDown = () => {\n    if (isScrollRef.current) {\n      scrollRef.current.scrollTop = scrollRef.current.scrollTop + step;\n      requestAnimationFrame(moveDown);\n    }\n  };\n\n  const moveUp = () => {\n    if (isScrollRef.current) {\n      scrollRef.current.scrollTop = scrollRef.current.scrollTop - step;\n      requestAnimationFrame(moveUp);\n    }\n  };\n\n  return (\n    <>\n      <div className=\"Product__scroll\" ref={scrollRef}>\n        {product.images.edges.length ? (\n          <img\n            className=\"Product__image\"\n            src={variantImage.src}\n            alt={`${product.title} product shot`}\n          />\n        ) : null}\n        <div>\n          {secondaryImages.map((image) => (\n            <img src={image.node.src} />\n          ))}\n        </div>\n      </div>\n      <div className=\"Scroll-buttons\">\n        <button\n          className=\"button button__up\"\n          id=\"bg-teal\"\n          onMouseDown={() => {\n            setMove(true);\n            moveUp();\n          }}\n          onMouseUp={() => setMove(false)}\n          onTouchStart={() => {\n            setMove(true);\n            moveUp();\n          }}\n          onTouchEnd={() => setMove(false)}\n        >\n          {\"  \"}\n          UP{\"  \"}\n        </button>\n        <button\n          className=\"button\"\n          id=\"bg-teal\"\n          onMouseDown={() => {\n            setMove(true);\n            moveDown();\n          }}\n          onMouseUp={() => setMove(false)}\n          onTouchStart={() => {\n            setMove(true);\n            moveDown();\n          }}\n          onTouchEnd={() => setMove(false)}\n        >\n          DOWN\n        </button>\n      </div>\n    </>\n  );\n}\n\nexport default ScrollImage;\n","import React, { useState } from \"react\";\nimport { formatPrice } from \"../../helpers/formatters\";\nimport ScrollImage from \"./ScrollImage\";\n\nfunction Product(props) {\n  let defaultOptionValues = {};\n\n  props.product.options.forEach((selector) => {\n    defaultOptionValues[selector.name] = selector.values[0];\n  });\n\n  const secondaryImages = [...props.product.images.edges];\n  secondaryImages.shift();\n\n  const [variantImage, setVariantImage] = useState(\n    props.product.images.edges[0].node\n  );\n  const [variant, setVariant] = useState(props.product.variants.edges[0].node);\n  const [variantQuantity, setVariantQuantity] = useState(1);\n\n  // const findImage = (images, variantId) => {\n  //   const primary = images[0];\n\n  //   const image = images.filter(function (image) {\n  //     return image.variant_ids.includes(variantId);\n  //   })[0];\n\n  //   return (image || primary).src;\n  // };\n\n  // const handleOptionChange = (event) => {\n  //   const target = event.target;\n  //   selectedOptions[target.name] = target.value;\n\n  //   const selectedVariant = props.product.variants.edges.find((variant) => {\n  //     return variant.node.selectedOptions.every((selectedOption) => {\n  //       return selectedOptions[selectedOption.name] === selectedOption.value;\n  //     });\n  //   }).node;\n\n  //   setVariant(selectedVariant);\n  //   setVariantImage(selectedVariant.image);\n  // };\n\n  // const handleQuantityChange = (event) => {\n  //   setVariantQuantity(event.target.value);\n  // };\n\n  // let variantSelectors = props.product.options.map((option) => {\n  //   return (\n  //     <VariantSelector\n  //       handleOptionChange={handleOptionChange}\n  //       key={option.id.toString()}\n  //       option={option}\n  //     />\n  //   );\n  // });\n\n  return (\n    <div className=\"container\">\n      <div className=\"Product\">\n        <div className=\"Product__left\">\n          {/* {props.product.images.edges.length ? (\n            <img\n              className=\"Product__image\"\n              src={variantImage.src}\n              alt={`${props.product.title} product shot`}\n            />\n          ) : null}\n          <div>\n            {secondaryImages.map((image) => (\n              <img src={image.node.src} />\n            ))}\n          </div> */}\n          <ScrollImage\n            product={props.product}\n            variantImage={variantImage}\n            secondaryImages={secondaryImages}\n          />\n        </div>\n\n        <div className=\"Product__right\">\n          <h5 className=\"Product__title\">{props.product.title}</h5>\n\n          <span className=\"Product__price\">\n            {formatPrice(variant.price.amount)}\n          </span>\n          {/* {variantSelectors} */}\n          {/* <label className=\"Product__option\">\n          Quantity\n          <input\n            min=\"1\"\n            type=\"number\"\n            defaultValue={variantQuantity}\n            onChange={handleQuantityChange}\n          ></input>\n        </label> */}\n          <button\n            className=\"Product__buy button rotate\"\n            onClick={() => props.addVariantToCart(variant.id, variantQuantity)}\n          >\n            Add to Cart\n          </button>\n        </div>\n      </div>\n      <span className=\"Product\">\n        <div\n          dangerouslySetInnerHTML={{ __html: props.product.descriptionHtml }}\n        ></div>\n      </span>\n    </div>\n  );\n}\n\nexport default Product;\n","import React, { useState } from 'react';\nimport { graphql } from 'react-apollo';\nimport {flowRight as compose} from 'lodash';\nimport gql from 'graphql-tag';\nimport PropTypes from 'prop-types';\n\nfunction CustomerAuth(props){\n\n  const [email,setEmail] = useState('');\n  const [password,setPassword] = useState('');\n  const [nonFieldErrorMessage,setNonFieldErrorMessage] = useState(null);\n  const [emailErrorMessage, setEmailErrorMessage] = useState(null);\n  const [passwordErrorMessage, setPasswordErrorMessage] = useState(null);\n\n  const resetInputFields = () => {\n    setPassword('');\n    setEmail('');\n  };\n\n  const resetErrorMessages = () => {\n    setNonFieldErrorMessage( null );\n    setEmailErrorMessage( null );\n    setPasswordErrorMessage( null );\n  };\n\n  const handleSubmit = () => {\n    resetErrorMessages();\n    if (props.newCustomer) {\n      createCustomerAccount(email, password)\n    } else {\n      loginCustomerAccount(email, password)\n    }\n  };\n\n  const createCustomerAccount = (email, password) => {\n    const input = {\n      email: email,\n      password: password\n    }\n    props.customerCreate(\n      { variables: { input }\n      }).then((res) => {\n        if (res.data.customerCreate.customer){\n           props.closeCustomerAuth();\n           props.showAccountVerificationMessage();\n        } else {\n          res.data.customerCreate.userErrors.forEach(function (error) {\n            if (error.field && error.field === 'email') {\n              setEmailErrorMessage( error.message );\n            } else if (error.field && error.field === 'password') {\n              setPasswordErrorMessage( error.message );\n            } else {\n              setNonFieldErrorMessage( error.message );\n            }\n          });\n        }\n    });\n  }\n\n  const loginCustomerAccount = (email, password) => {\n    const input = {\n      email: email,\n      password: password\n    }\n    props.customerAccessTokenCreate(\n      { variables: { input }\n      }).then((res) => {\n      if (res.data.customerAccessTokenCreate.customerAccessToken) {\n        props.associateCustomerCheckout(res.data.customerAccessTokenCreate.customerAccessToken.accessToken);\n      } else {\n        res.data.customerAccessTokenCreate.userErrors.forEach(function (error) {\n          if (error.field && error.field === 'email') {\n            setEmailErrorMessage( error.message );\n          } else if (error.field && error.field === 'password') {\n            setPasswordErrorMessage( error.message );\n          } else {\n            setNonFieldErrorMessage( error.message );\n          }\n        });\n      }\n    });\n  }\n\n  return (\n    <div className={`CustomerAuth ${props.isCustomerAuthOpen ? 'CustomerAuth--open' : ''}`}>\n      <button\n        onClick={() => { props.closeCustomerAuth(); resetErrorMessages(); resetInputFields();}}\n        className=\"CustomerAuth__close\">\n        ×\n      </button>\n      <div className=\"CustomerAuth__body\">\n        <h2 className=\"CustomerAuth__heading\">{props.newCustomer ? 'Create your Account' : 'Log in to your account'}</h2>\n        {nonFieldErrorMessage &&\n          <div className=\"error\">{nonFieldErrorMessage}</div>\n        }\n        <label className=\"CustomerAuth__credential\">\n          <input className=\"CustomerAuth__input\" type=\"email\" placeholder=\"Email\" name={\"email\"} value={email} onChange={(event)=>{setEmail(event.target.value)}}></input>\n          {emailErrorMessage &&\n            <div className=\"error\">{emailErrorMessage}</div>\n          }\n        </label>\n        <label className=\"CustomerAuth__credential\">\n          <input className=\"CustomerAuth__input\" type=\"password\" placeholder=\"Password\" name={\"password\"} value={password} onChange={(event)=>setPassword(event.target.value)}></input>\n          {passwordErrorMessage &&\n            <div className=\"error\">{passwordErrorMessage}</div>\n          }\n        </label>\n        <button className=\"CustomerAuth__submit button\" type=\"submit\" onClick={handleSubmit}>{props.newCustomer ? 'Create Account' : 'Log in'}</button>\n      </div>\n    </div>\n\n  )\n}\n\nCustomerAuth.propTypes = {\n  customerCreate: PropTypes.func.isRequired,\n  customerAccessTokenCreate: PropTypes.func.isRequired,\n};\n\nconst customerCreate = gql`\n  mutation customerCreate($input: CustomerCreateInput!) {\n    customerCreate(input: $input) {\n      userErrors {\n        field\n        message\n      }\n      customer {\n        id\n      }\n    }\n  }\n`;\n\nconst customerAccessTokenCreate = gql`\n  mutation customerAccessTokenCreate($input: CustomerAccessTokenCreateInput!) {\n    customerAccessTokenCreate(input: $input) {\n      userErrors {\n        field\n        message\n      }\n      customerAccessToken {\n        accessToken\n        expiresAt\n      }\n    }\n  }\n`;\n\nconst CustomerAuthWithMutation = compose(\n  graphql(customerCreate, {name: \"customerCreate\"}),\n  graphql(customerAccessTokenCreate, {name: \"customerAccessTokenCreate\"})\n)(CustomerAuth);\n\nexport default CustomerAuthWithMutation;\n","import React, { useContext, useEffect } from \"react\";\nimport { CartContext } from \"../../contexts/CartContext\";\nimport Product from \"./Product\";\nimport CustomerAuthWithMutation from \"./CustomerAuth\";\nimport { fetchCheckout } from \"../../queries/checkout\";\nimport { client } from \"../../index\";\n\nfunction Shop() {\n  const {\n    shopLoading,\n    shopError,\n    closeCustomerAuth,\n    isCustomerAuthOpen,\n    isNewCustomer,\n    associateCustomerCheckout,\n    accountVerificationMessage,\n    shopData,\n    addVariantToCart,\n    checkout,\n    setCheckout,\n    createCheckoutMutation,\n    query,\n  } = useContext(CartContext);\n\n  // Fetch checkout from shopify\n  const fetchExistingCheckout = async (id) => {\n    const res = await client.query({\n      query: fetchCheckout,\n      variables: { id },\n    });\n    return res.data.node;\n  };\n  console.log(\"shopData\", shopData);\n  // Fetch existing checkout or create new one:\n  useEffect(() => {\n    console.log(\"render\");\n    const initializeCheckout = async () => {\n      const existingCheckoutID = localStorage.getItem(\"shopify_checkout_id\");\n      const setCheckoutInState = (checkout) => {\n        localStorage.setItem(\"shopify_checkout_id\", checkout.id);\n        setCheckout(checkout);\n      };\n\n      // If a checkout id already exists:\n      if (existingCheckoutID) {\n        try {\n          // create a checkout with the existing checkout id\n          const checkout = await fetchExistingCheckout(existingCheckoutID);\n          // Make sure this cart hasn’t already been purchased.\n          if (!checkout.completedAt) {\n            setCheckoutInState(checkout);\n            return;\n          }\n        } catch (e) {\n          localStorage.setItem(\"shopify_checkout_id\", null);\n        }\n      }\n\n      // If a checkout id does NOT exist, create a new empty checkout\n      const variables = { input: {} };\n      createCheckoutMutation({ variables }).then(\n        (res) => {\n          console.log(res);\n        },\n        (err) => {\n          console.log(\"create checkout error\", err);\n        }\n      );\n    };\n    initializeCheckout();\n    // eslint-disable-next-line\n  }, [checkout]);\n\n  if (shopError) {\n    return <p>{shopError.message}</p>;\n  }\n\n  return (\n    <div className=\"App\">\n      <CustomerAuthWithMutation\n        closeCustomerAuth={closeCustomerAuth}\n        isCustomerAuthOpen={isCustomerAuthOpen}\n        newCustomer={isNewCustomer}\n        associateCustomerCheckout={associateCustomerCheckout}\n        showAccountVerificationMessage={accountVerificationMessage}\n      />\n\n      <div className=\"Product-wrapper\">\n        {shopLoading ? (\n          <p>Loading...</p>\n        ) : (\n          <>\n            {shopData.collections.edges[0].node.products.edges.map(\n              (product) => (\n                <Product\n                  addVariantToCart={addVariantToCart}\n                  checkout={checkout}\n                  key={product.node.id.toString()}\n                  product={product.node}\n                />\n              )\n            )}\n          </>\n        )}\n      </div>\n      {/* <Cart /> */}\n    </div>\n  );\n}\n\nexport default Shop;\n","import React from \"react\";\nimport Shop from \"./Shop/Shop\";\nimport { Blurb, BlurbDiv, P, A, Span, MobileLink } from \"./Content\";\n\nconst Home = () => {\n  const marginBottom20 = {\n    marginBottom: 20,\n  };\n\n  const marginTop20 = {\n    marginTop: 20,\n  };\n\n  const margin20 = {\n    marginTop: 20,\n    marginBottom: 40,\n    paddingBottom: 40,\n  };\n\n  return (\n    <div className=\"content-container\">\n      <div>\n        <BlurbDiv>\n          <Blurb> The secondhand fashion magazine.</Blurb>\n        </BlurbDiv>\n      </div>\n      <Shop />\n      <Span>\n        <P style={marginTop20}>\n          <A\n            rel=\"noreferrer\"\n            target=\"_blank\"\n            href=\"https://www.instagram.com/mildewmag\"\n          >\n            @mildewmag\n          </A>\n        </P>\n        <P style={marginTop20}>\n          <A rel=\"noreferrer\" target=\"_blank\" href=\"mailto:mildewmag@gmail.com\">\n            mildewmag@gmail.com\n          </A>\n        </P>\n        <P style={margin20}>\n          <MobileLink to=\"/about\">About Mildew</MobileLink>\n        </P>\n      </Span>\n      {/* <Span>\n        <P style={margin20}>\n          <MobileLink to=\"/\">Home</MobileLink>\n        </P>\n      </Span> */}\n    </div>\n  );\n};\n\nexport { Home };\n","import React from \"react\";\n\nfunction LineItemm(props) {\n  const decrementQuantity = (lineItemId) => {\n    const updatedQuantity = props.line_item.quantity - 1;\n    props.updateLineItemInCart(lineItemId, updatedQuantity);\n  };\n\n  const incrementQuantity = (lineItemId) => {\n    const updatedQuantity = props.line_item.quantity + 1;\n    props.updateLineItemInCart(lineItemId, updatedQuantity);\n  };\n\n  return (\n    <li className=\"Line-item\">\n      <div className=\"Line-item__img\">\n        {props.line_item.variant.image ? (\n          <img\n            src={props.line_item.variant.image.src}\n            alt={`${props.line_item.title} product shot`}\n          />\n        ) : null}\n      </div>\n      <div className=\"Line-item__content\">\n        <div className=\"Line-item__content-row\">\n          <div className=\"Line-item__variant-title\">\n            {props.line_item.variant.title}\n          </div>\n          <span className=\"Line-item__title\">{props.line_item.title}</span>\n        </div>\n        <div className=\"Line-item__content-row\">\n          <div className=\"Line-item__quantity-container\">\n            <button\n              className=\"Line-item__quantity-update\"\n              onClick={() => decrementQuantity(props.line_item.id)}\n            >\n              -\n            </button>\n            <span className=\"Line-item__quantity\">\n              {props.line_item.quantity}\n            </span>\n            <button\n              className=\"Line-item__quantity-update\"\n              onClick={() => incrementQuantity(props.line_item.id)}\n            >\n              +\n            </button>\n          </div>\n          <span className=\"Line-item__price\">\n            <span className=\"spacer\"></span>${\" \"}\n            {parseFloat(\n              (\n                props.line_item.quantity *\n                props.line_item.variant.priceV2.amount\n              ).toFixed(2)\n            )}\n          </span>\n          <button\n            className=\"Line-item__remove\"\n            onClick={() => props.removeLineItemInCart(props.line_item.id)}\n          >\n            ×\n          </button>\n        </div>\n      </div>\n    </li>\n  );\n}\n\nexport default LineItemm;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport { CartContext } from \"../../contexts/CartContext\";\nimport LineItem from \"./LineItem\";\nimport { formatPrice } from \"../../helpers/formatters\";\n\nfunction Cart() {\n  const {\n    isCartOpen,\n    removeLineItemInCart,\n    checkout,\n    updateLineItemInCart,\n    handleCartClose,\n  } = useContext(CartContext);\n\n  const [subtotal, setSubtotal] = useState();\n\n  useEffect(() => {\n    checkout && setSubtotal(checkout?.subtotalPriceV2?.amount);\n  }, [checkout]);\n\n  const openCheckout = () => {\n    window.open(checkout.webUrl);\n  };\n\n  let line_items = checkout.lineItems.edges.map((line_item) => {\n    return (\n      <LineItem\n        removeLineItemInCart={removeLineItemInCart}\n        updateLineItemInCart={updateLineItemInCart}\n        key={line_item.node.id.toString()}\n        line_item={line_item.node}\n      />\n    );\n  });\n\n  return (\n    <div className={`Cart ${isCartOpen ? \"Cart--open\" : \"\"}`}>\n      <header className=\"Cart__header\">\n        <h2 className=\"Cart__title\">Your cart</h2>\n        <button onClick={handleCartClose} className=\"Cart__close\">\n          ×\n        </button>\n      </header>\n      <ul className=\"Cart__line-items\">{line_items}</ul>\n      <footer className=\"Cart__footer\">\n        <div className=\"Cart-info clearfix\">\n          <div className=\"Cart-info__total Cart-info__small\">Subtotal</div>\n          <div className=\"Cart-info__pricing\">\n            <span className=\"pricing\">{formatPrice(subtotal)}</span>\n          </div>\n        </div>\n        <button className=\"Cart__checkout button\" onClick={openCheckout}>\n          Checkout\n        </button>\n      </footer>\n    </div>\n  );\n}\n\nexport default Cart;\n","export default __webpack_public_path__ + \"static/media/nav1white.132b6e6e.png\";","export default __webpack_public_path__ + \"static/media/nav1color.27c1cf22.png\";","export default __webpack_public_path__ + \"static/media/nav2white.9e5f972e.png\";","export default __webpack_public_path__ + \"static/media/nav2color.d32da9fc.png\";","export default __webpack_public_path__ + \"static/media/nav3white.63a4b626.png\";","export default __webpack_public_path__ + \"static/media/nav3color.a381fdda.png\";","export default __webpack_public_path__ + \"static/media/nav4white.09d0259e.png\";","export default __webpack_public_path__ + \"static/media/nav4color.ef8e4338.png\";","import React, { useContext } from \"react\";\n\nimport styled, { css } from \"styled-components\";\nimport { BrowserRouter, Link, Switch, Route, Redirect } from \"react-router-dom\";\n\nimport { CartContext } from \"../contexts/CartContext\";\nimport { About } from \"./About\";\nimport { Home } from \"./Home\";\nimport Cart from \"./Shop/Cart\";\n\nimport nav1white from \"../images/nav1white.png\";\nimport nav1color from \"../images/nav1color.png\";\nimport nav2white from \"../images/nav2white.png\";\nimport nav2color from \"../images/nav2color.png\";\nimport nav3white from \"../images/nav3white.png\";\nimport nav3color from \"../images/nav3color.png\";\nimport nav4white from \"../images/nav4white.png\";\nimport nav4color from \"../images/nav4color.png\";\n\nconst NavBlob = styled.div`\n  background: transparent;\n  background-size: cover;\n  color: black;\n  font-family: \"TwCen\";\n  font-size: 22px;\n  margin: 30px 40px;\n  position: fixed;\n  text-decoration: none;\n  width: 180px;\n  height: 120px;\n  &:hover {\n    color: white;\n  }\n  @media only screen and (max-width: 800px) {\n    display: none;\n  }\n\n  ${(props) =>\n    props.topLeft &&\n    css`\n      background-image: url(${nav1white});\n      top: 0;\n      left: 0;\n      &:hover {\n        background-image: url(${nav1color});\n        transform: rotate(-15deg);\n      }\n    `};\n\n  ${(props) =>\n    props.topRight &&\n    css`\n      background-image: url(${nav2white});\n      top: 0;\n      right: 0;\n      &:hover {\n        background-image: url(${nav2color});\n        transform: rotate(15deg);\n      }\n    `};\n\n  ${(props) =>\n    props.bottomLeft &&\n    css`\n      background-image: url(${nav3white});\n      bottom: 0;\n      left: 0;\n      &:hover {\n        background-image: url(${nav3color});\n        transform: rotate(15deg);\n      }\n    `};\n\n  ${(props) =>\n    props.bottomRight &&\n    css`\n      background-image: url(${nav4white});\n      bottom: 0;\n      right: 0;\n      width: 210px;\n      padding-bottom: 20px;\n      &:hover {\n        background-image: url(${nav4color});\n        transform: rotate(-15deg);\n      }\n    `};\n`;\n\nconst NavLink = styled(Link)`\n  top: 50%;\n  left: 50%;\n  padding: 50px 50px;\n  position: absolute;\n  text-decoration: none;\n  transform: translate(-50%, -50%);\n  &:hover {\n    color: white;\n  }\n\n  ${(props) =>\n    props.bR &&\n    css`\n      top: 57%;\n    `}\n`;\n\nconst CartButton = styled.div`\n  top: 50%;\n  left: 50%;\n  padding: 50px 10px;\n  position: absolute;\n  text-decoration: none;\n  transform: translate(-50%, -50%);\n  cursor: pointer;\n  &:hover {\n    color: white;\n  }\n\n  ${(props) =>\n    props.bR &&\n    css`\n      top: 57%;\n    `}\n`;\n\nconst Hidden = styled.div`\n  position: absolute;\n  top: 0;\n  right: -50;\n  max-width: 1px;\n`;\n\nconst HiddenImg = styled.img`\n  max-width: 100%;\n`;\n\nconst Container = styled.div``;\n\nconst Navigation = (props) => {\n  const { isCartOpen, setCartOpen, checkout } = useContext(CartContext);\n  const clickHandler = () => {\n    setCartOpen(!isCartOpen);\n  };\n\n  const cartQty = checkout.lineItems.edges.length;\n\n  return (\n    <Container>\n      <NavBlob topLeft>\n        <NavLink id=\"green\" to=\"/\">\n          Shop\n        </NavLink>\n      </NavBlob>\n      <NavBlob topRight>\n        {!isCartOpen && (\n          <div>\n            <CartButton id=\"pink\" onClick={clickHandler}>\n              Cart {cartQty > 0 && `(${cartQty})`}\n            </CartButton>\n          </div>\n        )}\n      </NavBlob>\n      <NavBlob bottomLeft>\n        <NavLink bR id=\"teal\" to=\"/about\">\n          About\n        </NavLink>\n      </NavBlob>\n      <NavBlob bottomRight>\n        <NavLink\n          bR\n          id=\"blue\"\n          target=\"_blank\"\n          to={{ pathname: \"https://www.instagram.com/mildewmag/\" }}\n        >\n          Instagram\n        </NavLink>\n      </NavBlob>\n\n      <Switch>\n        <Route exact path=\"/\" component={Home}></Route>\n        <Route exact path=\"/about\" component={About}></Route>\n        <Route path=\"*\">\n          <Redirect to=\"/\" />\n        </Route>\n      </Switch>\n      <Hidden>\n        <HiddenImg src={nav1color}></HiddenImg>\n        <HiddenImg src={nav2color}></HiddenImg>\n        <HiddenImg src={nav3color}></HiddenImg>\n        <HiddenImg src={nav4color}></HiddenImg>\n      </Hidden>\n      <Cart />\n    </Container>\n  );\n};\n\nexport default Navigation;\n","import React from \"react\";\nimport { CartProvider } from \"./contexts/CartContext\";\nimport Header from \"./components/Header\";\nimport Navigation from \"./components/Navigation\";\n\nfunction App() {\n  return (\n    <CartProvider>\n      <Header />\n      <Navigation />\n    </CartProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./App.css\";\nimport \"./fonts/Tw-Cen-MT.ttf\";\nimport \"./fonts/GoudyBookletter1911.ttf\";\nimport App from \"./App\";\nimport { ApolloClient } from \"apollo-client\";\nimport { createHttpLink } from \"apollo-link-http\";\nimport { setContext } from \"apollo-link-context\";\nimport { InMemoryCache } from \"apollo-cache-inmemory\";\nimport { ApolloProvider } from \"react-apollo\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nconst httpLink = createHttpLink({\n  uri: \"https://mildew-magazine.myshopify.com/api/2022-10/graphql.json\",\n});\n\nconst middlewareLink = setContext(() => ({\n  headers: {\n    \"X-Shopify-Storefront-Access-Token\": \"129221aad42cfe6398aba443afb14187\",\n  },\n}));\n\nexport const client = new ApolloClient({\n  link: middlewareLink.concat(httpLink),\n  cache: new InMemoryCache(),\n});\n\nReactDOM.render(\n  <Router>\n    <ApolloProvider client={client}>\n      <App client={client} />\n    </ApolloProvider>\n  </Router>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}